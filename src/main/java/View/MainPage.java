/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;




import Controller.ArticleDTO;
import Controller.CommentDTO;
import Controller.LoginDTO;
import java.awt.Color;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.MouseEvent;
import java.awt.event.WindowEvent;
import java.io.File;
import java.io.IOException;
import java.net.URL;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import Model.*;
import java.util.ArrayList;


/**
 *
 * @author ASUS
 */
public class MainPage extends javax.swing.JFrame {
    LoginDTO logindto = new LoginDTO();
    ArticleDTO articledto = new ArticleDTO();
    DefaultTableModel tblModel;
    DefaultTableModel tblSearch;
    int page = 1;
    /**
     * Creates new form MainPage
     */
    public MainPage() {
        initComponents();
        setLocationRelativeTo(null);
        initObject();
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jOptionPane1 = new javax.swing.JOptionPane();
        UpdateBtn = new javax.swing.JButton();

        UpdateBtn.setText("Update");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        setSize(new java.awt.Dimension(0, 0));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SearchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchBtnActionPerformed
        changePage(CardLayoutPanel, SearchLayout);
    }//GEN-LAST:event_SearchBtnActionPerformed
//Form Window Open
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        try {
            articledto.setImagePage("/SunriseLake.png", Thumbnail1);
            articledto.setImagePage("/WindowsB.png", Thumbnail2);


        } catch (Exception e) {
            e.getStackTrace();
        }

        dtm = (DefaultTableModel) Table.getModel();

        setWelcomeLabel();

        CommentPanel.setVisible(false);
        
        EmptyPostTitleWarning.setVisible(false);
        EmptyPostDesWarning.setVisible(false);
        EmptyPostImgWarning.setVisible(false);
    }//GEN-LAST:event_formWindowOpened

    private void CommentBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CommentBtnActionPerformed
        CommentPanel.setVisible(true);

    }//GEN-LAST:event_CommentBtnActionPerformed


    private void LikeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LikeBtnActionPerformed

        if (colorCount == 0) {

            LikeBtn.setkStartColor(new Color(255, 51, 51));
            colorCount++;
        } else {
            LikeBtn.setkStartColor(new Color(0, 0, 0));
            colorCount--;
        }

    }//GEN-LAST:event_LikeBtnActionPerformed

    private void ConfirmBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConfirmBtnActionPerformed
        doComment();
    }//GEN-LAST:event_ConfirmBtnActionPerformed



    private void UpPostBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpPostBtnActionPerformed
        if (InputPostTitle.getText().equals("")) {
            EmptyPostTitleWarning.setVisible(true);
        }else{
            EmptyPostTitleWarning.setVisible(false);  
        }
        if (InputPostDescription.getText().equals("")) {
            EmptyPostDesWarning.setVisible(true);
        }else{
            EmptyPostDesWarning.setVisible(false);
        }
        if (imagePath.equals("")) {
            EmptyPostImgWarning.setVisible(true);
        }else{
            EmptyPostImgWarning.setVisible(false);
        }
        
    }//GEN-LAST:event_UpPostBtnActionPerformed

    private void ClearPostBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearPostBtnActionPerformed
        clearCreatePostPage();
    }//GEN-LAST:event_ClearPostBtnActionPerformed

    private void UpPostBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UpPostBtnMouseClicked
        // TODO add your handling code here:
        createNewPost();
        disableField();
    }//GEN-LAST:event_UpPostBtnMouseClicked

    private void SearchBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SearchBtnMouseClicked
        // TODO add your handling code here:
        initSearch();
    }//GEN-LAST:event_SearchBtnMouseClicked

    private void FramePanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FramePanelMouseClicked
        // TODO add your handling code here:
        setWelcomeLabel();
    }//GEN-LAST:event_FramePanelMouseClicked

    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainPage().setVisible(true);
            }
        });
    }


    int colorCount = 0;
    DefaultTableModel dtm;
    String imagePath = ""; //duong dan cua hinh duoc chon
    int current_article = 0;
    int current_dash = 0;

    public void initObject(){
        initTable();
        initValidation();
    }
    
    public void initTable(){
        String[] columnContent = new String[]{"user", "comment"};

        tblModel = new DefaultTableModel(){
      
          @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        tblModel.setColumnIdentifiers(columnContent);
        CommentTable.setModel(tblModel);
        disableField();
    }

    public void disableField(){
        String a = articledto.getAmountArticle(String.valueOf(logindto.makeId()));
        System.out.println("ss: "+a);
        if (a.equals("")||a.equals("1")){
            PostD1.setVisible(false);
            PostD2.setVisible(false);
            PostD3.setVisible(false);
            PostD4.setVisible(false);
            jLabel1.setVisible(true);
        }
        if(a.equals("2")){
            PostD1.setVisible(true);
            PostD2.setVisible(false);
            PostD3.setVisible(false);
            PostD4.setVisible(false);
            jLabel1.setVisible(false);
            articledto.fillEachArticle(PostImage1, PostTitle1, UploadDayPost1, PostState1, 0);
        }
        else if(a.equals("3")){
            PostD1.setVisible(true);
            PostD2.setVisible(true);
            PostD3.setVisible(false);
            PostD4.setVisible(false);
            jLabel1.setVisible(false);
            articledto.fillEachArticle(PostImage1, PostTitle1, UploadDayPost1, PostState1, 0);
            articledto.fillEachArticle(PostImage2, PostTitle2, UploadDayPost2, PostState2, 1);
        }
        else if(a.equals("4")){
            PostD1.setVisible(true);
            PostD2.setVisible(true);
            PostD3.setVisible(true);
            PostD4.setVisible(false);
            jLabel1.setVisible(false);
            articledto.fillEachArticle(PostImage1, PostTitle1, UploadDayPost1, PostState1, 0);
            articledto.fillEachArticle(PostImage2, PostTitle2, UploadDayPost2, PostState2, 1);
            articledto.fillEachArticle(PostImage3, PostTitle3, UploadDayPost3, PostState3, 2);
        }
        else {
            jLabel1.setVisible(false);
        }
    }
    
    public void initValidation(){
        if(logindto.checkRole().equals("user")){
            BrowsePage.setVisible(false);
        }
    }
    
    public void initSearch(){
        String[] columnContent = new String[]{"PostCode", "PostTittle", "Comments","PostAuthor", "UploadDay"};

        tblSearch = new DefaultTableModel(){
      
          @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        tblSearch.setColumnIdentifiers(columnContent);
        Table.setModel(tblSearch);
        articledto.searchArticle(tblSearch , SearchInput.getText(), "done");
        ResultSearchLabel.setText("Result for '"+SearchInput.getText()+"'");
        SearchInput.setText("");    
    }
    
    
    public void fillToDetailPage(String imagePath, JLabel imageJLabel, String pageContent) throws IOException {
        setImagePage(imagePath, imageJLabel);
        PageDetailContent.setText("");

    }

    public void setImagePage(String imagePath, JLabel imageLabel) throws IOException {
        try {

            URL url = getClass().getResource(imagePath); // them anh trang detail vao day
            File file = new File(url.getPath());

            Image image = ImageIO.read(file);
            imageLabel.setText("");
            int height = imageLabel.getHeight();
            int width = imageLabel.getWidth();
            imageLabel.setIcon(new ImageIcon(image.getScaledInstance(width, height, 0)));
        } catch (Exception e) {
            e.getStackTrace();
        }

    }


    public void close() {
        WindowEvent closeWindow = new WindowEvent(this, WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(closeWindow);
    }




    //Method chon anh
    public void ChooseImage() {
        try {
            JFileChooser jfc = new JFileChooser();
            jfc.showOpenDialog(null);
            File file = jfc.getSelectedFile();
            Image image = ImageIO.read(file);
            YourChoseImage.setText("");
            int height = YourChoseImage.getHeight();
            int width = YourChoseImage.getWidth();
            YourChoseImage.setIcon(new ImageIcon(image.getScaledInstance(width, height, 0)));
            String path = file.getAbsolutePath();
            if (!path.isEmpty()) {
                imagePath = path;


            }
            System.out.println(imagePath);
        } catch (Exception e) {
            e.getStackTrace();
        }
    }

    //method chuyen trang
    public void changePage(JPanel layoutPanel, JPanel pagePanel) {
        layoutPanel.removeAll();
        layoutPanel.add(pagePanel);
        layoutPanel.repaint();
        layoutPanel.revalidate();
    }

    //clear thong tin khi chuyen trang
    public void clearCreatePostPage(){
        InputPostTitle.setText("");
        InputPostDescription.setText("");
        imagePath = "";
        YourChoseImage.setIcon(null);
        EmptyPostTitleWarning.setVisible(false);
        EmptyPostDesWarning.setVisible(false);
        EmptyPostImgWarning.setVisible(false);
    }
    
    public void setWelcomeLabel() {
        String stringWelcome = "Welcome " + logindto.changeUsername()+"--" +logindto.checkRole();
        String dashboard = logindto.changeUsername()+" + DASHBOARD";
        WelcomeLabel.setText(stringWelcome);
        DashBoardTitle.setText(dashboard);
        
    }

    public void indentIntoArticle(int i){
        ArrayList<Article> top2 = articledto.Top2View();
        PageDetailTitle.setText(top2.get(i).getTitle());
        PageDetailContent.setText(top2.get(i).getDescription());
        articledto.setImagePage(top2.get(i).getImage(), PageDetailImage);  
    }

    
    public void doComment(){
        if(InputComment.getText().equals("")){
            jOptionPane1.showConfirmDialog(this, "Please enter your content!!!");
        }
        else {
            articledto.comment(InputComment, tblModel,  logindto.makeId());
        }
        
    }

    public void fillToDashBoard(){
        System.out.println(""+page);
        articledto.fillEachArticle(PostImage1, PostTitle1, UploadDayPost1, PostState1, 0);
        articledto.fillEachArticle(PostImage2, PostTitle2, UploadDayPost2, PostState2, 1);
        articledto.fillEachArticle(PostImage3, PostTitle3, UploadDayPost3, PostState3, 2);
        articledto.fillEachArticle(PostImage4, PostTitle4, UploadDayPost4, PostState4, 3);
    }

    public void deleteArticle(int id){
        if(articledto.checkState(id)){
            int input = jOptionPane1.showConfirmDialog(null, 
                    "Do you want to proceed?", "Select an Option...",JOptionPane.YES_NO_CANCEL_OPTION);

            if(input==0){
                articledto.delete_article(id, page);
                fillToDashBoard();
            }
        }
        else {
            jOptionPane1.showMessageDialog(this, "This article must be sesored!!!");
        }
    }
    
    public void updateArticle(int id){
        if(articledto.checkState(id)){
            UpPostBtn.setVisible(false);
            CreatePostTitle.setText("Update Post");
            InputPostDescription.setLineWrap(true);
            InputPostDescription.setWrapStyleWord(true);
            ArrayList<Article> temp = articledto.returnTemp();
            InputPostTitle.setText(temp.get(id).getTitle());
            InputPostDescription.setText(temp.get(id).getDescription());
            articledto.setImagePage(temp.get(id).getImage(), YourChoseImage);
            fillToDashBoard();
            changePage(CardLayoutPanel, NewPostLayout);
            current_article = temp.get(id).getId();
            current_dash = id;
        }
        else {
            jOptionPane1.showMessageDialog(this, "This article must be sesored!!!");
        }
    }
    
    public void clickUpdate(int id){
        ArrayList<Article> temp = articledto.returnTemp();
        String image = "";
        if(imagePath.equals("")){
            image = temp.get(current_dash).getImage();
        }
        else {
            image = imagePath;
        }
        if(checkUpCreFiled()){
            articledto.updateArticle(InputPostTitle.getText(), image, InputPostDescription.getText(), id);
            changePage(CardLayoutPanel, DashboardLayout);
            fillToDashBoard();
            InputPostTitle.setText("");
            YourChoseImage.setText("");
            InputPostDescription.setText("");
        }
        else {
            JOptionPane.showMessageDialog(this, "You must enter all field");
        }
    }
    
    public void createNewPost(){
        if(checkUpCreFiled()){
            articledto.createNewPost(InputPostTitle.getText(), imagePath, InputPostDescription.getText(), String.valueOf(logindto.makeId()));
            changePage(CardLayoutPanel, DashboardLayout);
            InputPostTitle.setText("");
            YourChoseImage.setText("");
            InputPostDescription.setText("");
        }
        else {
            JOptionPane.showMessageDialog(this, "You must enter all field");
        }
    }
    
    public boolean checkUpCreFiled(){
        if(InputPostTitle.getText().equals("<html></html>")||InputPostDescription.getText().equals("")){
            return false;
        }
        else {
            return true;
        }
    }
    
    public void enterBrowse(){
        AdminPage ad = new AdminPage();
        ad.setVisible(true);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton UpdateBtn;
    private javax.swing.JOptionPane jOptionPane1;
    // End of variables declaration//GEN-END:variables
}
